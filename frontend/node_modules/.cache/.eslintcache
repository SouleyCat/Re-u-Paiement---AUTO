[{"C:\\Users\\jules\\Desktop\\CAT\\Automatisation Projects\\paiement_auto\\frontend\\src\\index.js":"1","C:\\Users\\jules\\Desktop\\CAT\\Automatisation Projects\\paiement_auto\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\jules\\Desktop\\CAT\\Automatisation Projects\\paiement_auto\\frontend\\src\\App.js":"3","C:\\Users\\jules\\Desktop\\CAT\\Automatisation Projects\\paiement_auto\\frontend\\src\\Components\\ReceiptForm.js":"4","C:\\Users\\jules\\Desktop\\CAT\\Automatisation Projects\\paiement_auto\\frontend\\src\\Components\\ReceiptDetail.js":"5","C:\\Users\\jules\\Desktop\\CAT\\Automatisation Projects\\paiement_auto\\frontend\\src\\Components\\Receipt.js":"6","C:\\Users\\jules\\Desktop\\CAT\\Automatisation Projects\\paiement_auto\\frontend\\src\\Components\\Receipts.js":"7","C:\\Users\\jules\\Desktop\\CAT\\Automatisation Projects\\paiement_auto\\frontend\\src\\Components\\Auth\\Login.js":"8","C:\\Users\\jules\\Desktop\\CAT\\Automatisation Projects\\paiement_auto\\frontend\\src\\Components\\Modals\\EditReceiptModal.js":"9"},{"size":582,"mtime":1698669494140,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1698669000044,"results":"12","hashOfConfig":"11"},{"size":1136,"mtime":1704196012939,"results":"13","hashOfConfig":"11"},{"size":6883,"mtime":1704731540326,"results":"14","hashOfConfig":"11"},{"size":4722,"mtime":1704727333936,"results":"15","hashOfConfig":"11"},{"size":4018,"mtime":1704717435319,"results":"16","hashOfConfig":"11"},{"size":5616,"mtime":1704728051779,"results":"17","hashOfConfig":"11"},{"size":3645,"mtime":1704728031556,"results":"18","hashOfConfig":"11"},{"size":2049,"mtime":1703172920483,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"67fwe9",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jules\\Desktop\\CAT\\Automatisation Projects\\paiement_auto\\frontend\\src\\index.js",[],[],"C:\\Users\\jules\\Desktop\\CAT\\Automatisation Projects\\paiement_auto\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\jules\\Desktop\\CAT\\Automatisation Projects\\paiement_auto\\frontend\\src\\App.js",[],[],"C:\\Users\\jules\\Desktop\\CAT\\Automatisation Projects\\paiement_auto\\frontend\\src\\Components\\ReceiptForm.js",[],[],"C:\\Users\\jules\\Desktop\\CAT\\Automatisation Projects\\paiement_auto\\frontend\\src\\Components\\ReceiptDetail.js",[],[],"C:\\Users\\jules\\Desktop\\CAT\\Automatisation Projects\\paiement_auto\\frontend\\src\\Components\\Receipt.js",[],[],"C:\\Users\\jules\\Desktop\\CAT\\Automatisation Projects\\paiement_auto\\frontend\\src\\Components\\Receipts.js",["48"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport LOGO from 'file:///C:/Users/jules/Downloads/LOGO_CAT.png';\r\nimport EditReceiptModal from './Modals/EditReceiptModal';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye,  } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst Receipts = () => {\r\n  const [receipts, setReceipts] = useState([]);\r\n  const [selectedReceipt, setSelectedReceipt] = useState(null);\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch receipts when the component mounts\r\n    fetchReceipts();\r\n  }, []);\r\n\r\n  const fetchReceipts = async () => {\r\n    try {\r\n      // Fetch all receipts from the backend\r\n      const response = await axios.get('http://localhost:8000/api/receipts');\r\n      setReceipts(response.data.receipts);\r\n    } catch (error) {\r\n      console.error('Error fetching receipts:', error.response ? error.response.data : error.message);\r\n    }\r\n  };\r\n\r\n  // const handleEdit = (id) => {\r\n  //   const selectedReceipt = receipts.find((receipt) => receipt.id === id);\r\n  //   setSelectedReceipt(selectedReceipt);\r\n  //   setModalOpen(true);\r\n  // };\r\n\r\n  const handleModalClose = () => {\r\n    setModalOpen(false);\r\n    setSelectedReceipt(null);\r\n  };\r\n\r\n  const handleSaveChanges = (editedData) => {\r\n    // Send an update request to the server with the edited data\r\n    // Then update the local state or refetch the data\r\n    // For simplicity, let's assume you have an updateReceipt function\r\n    // that sends a PUT request to the server\r\n    updateReceipt(selectedReceipt.id, editedData);\r\n\r\n    // Close the modal\r\n    handleModalClose();\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      // Send a DELETE request to delete the receipt\r\n      await axios.delete(`http://localhost:8000/api/delete/${id}`);\r\n      // Update the local state after successful deletion\r\n      setReceipts((prevReceipts) => prevReceipts.filter((receipt) => receipt.id !== id));\r\n    } catch (error) {\r\n      console.error('Error deleting receipt:', error.response ? error.response.data : error.message);\r\n    }\r\n  };\r\n\r\n  const updateReceipt = async (id, editedData) => {\r\n    try {\r\n      // Send a PUT request to update the receipt\r\n      await axios.put(`http://localhost/api/edit/${id}`, editedData);\r\n      // Update the local state or refetch the data\r\n      fetchReceipts();\r\n    } catch (error) {\r\n      console.error('Error updating receipt:', error.response ? error.response.data : error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <header style={{ textAlign: 'center', padding: '20px', backgroundColor: '#f8f9fa' }}>\r\n        <img src={LOGO} alt=\"Logo\" style={{ height: '100px' }} />\r\n        <h1 className=\"mb-4\">Historique de Re√ßus</h1>\r\n      </header>\r\n    <div\r\n      className=\"container mt-4 bg-white\" >    \r\n        <div className=\"text-end\">\r\n      <Link to=\"/receiptform\" className=\"btn btn-primary\">\r\n        Nouveau\r\n      </Link>\r\n    </div>\r\n    <br/>\r\n    <div>\r\n    <table className=\"table table-bordered\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">NUMERO DOSSIER</th>\r\n            <th scope=\"col\">Nom Complet</th>\r\n            <th scope=\"col\">Date</th>\r\n            <th scope=\"col\">Somme</th>\r\n            <th scope=\"col\">Type de Paiement</th>\r\n            <th scope=\"col\" className='text-center'>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {receipts.map((receipt) => (\r\n            <tr key={receipt.id}>\r\n              <th scope=\"row\">{receipt.dossierNumber}</th>\r\n              <td>{receipt.nomComplet}</td>\r\n              <td>{receipt.date}</td>\r\n              <td>{receipt.amount}</td>\r\n              <td>{receipt.paymentType}</td>\r\n              <td>\r\n                <Link to={`/receipt/${receipt.id}`}>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-secondary\"\r\n                    style={{ marginLeft: '22px' }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faEye}/>\r\n                  </button>\r\n                </Link>\r\n\r\n              <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger btn-sm btn-end\" \r\n                    style={{ marginLeft: '14px' }}\r\n                    onClick={() => handleDelete(receipt.id)}\r\n                >\r\n                    Supprimer\r\n                </button>\r\n                </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      </div>\r\n\r\n      {selectedReceipt && (\r\n        <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{ display: isModalOpen ? 'block' : 'none' }}>\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Edit Receipt</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={handleModalClose}>\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <EditReceiptModal\r\n                  receiptData={selectedReceipt}\r\n                  onSave={handleSaveChanges}\r\n                  onClose={handleModalClose}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Receipts;\r\n","C:\\Users\\jules\\Desktop\\CAT\\Automatisation Projects\\paiement_auto\\frontend\\src\\Components\\Auth\\Login.js",[],[],"C:\\Users\\jules\\Desktop\\CAT\\Automatisation Projects\\paiement_auto\\frontend\\src\\Components\\Modals\\EditReceiptModal.js",[],[],{"ruleId":"49","severity":1,"message":"50","line":5,"column":16,"nodeType":"51","messageId":"52","endLine":5,"endColumn":25},"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar"]